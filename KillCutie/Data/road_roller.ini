; Author: Jonas Byström
; Copyright (c) 2009 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 400
bounce			= 0.01
friction		= -1.2
affected_by_gravity	= True
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 90	# World-absolute euler angles.
joint_spring_constant	= 70
joint_spring_damping	= 20
material		= "small_metal"


; -------------------- Specific parts. --------------------

[body:.*phys_body]
mass			= 3000
connector_types		= ["connectee_3dof"]

[body:.*phys_.*_wheel.*]
bounce			= 1e-6
friction		= 0.7
joint			= "suspend_hinge"

[body:.*phys_fender]
joint			= "hinge"
mass			= 50
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 0	# World-absolute euler angles.
joint_stops		= [-35, 35]


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 2
max_velocity		= [6, -3]
friction		= 0.01	; Constant part of engine strength when input % applied. Engine brakes.
controller_index	= 0
connected_to		= [(".*phys_rear_wheel.", +1, "normal")]

[engine:turn]
type			= "hinge_torque"
strength		= 2
max_velocity		= [0.7, 0]
friction		= 0.93	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_fender", +1, "normal")]

[engine:brake]
type			= "hinge_brake"
strength		= 2.8
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal brakes (all, scaled >= 0) and handbrake (nodes with high scaling values).
connected_to		= [(".*phys_rear_wheel.", 100, "normal")]


; -------------------- Tags. --------------------

[tag:eyes]
type			= "eye"
float_values		= [-0.15]
string_values		= []
phys_list		= [".*phys_fender"]
engine_list		= []
mesh_list		= [".*m_eye."]

[tag:engine_sound]
type			= "engine_sound"
float_values		= [1,   1,2,1,   0.2,0.5,1,   0,0.5,1,	1]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["truck_01.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:acc"]
mesh_list		= []

;[tag:child_upright_stability]
;type			= "upright_stabilizer"
;float_values		= [0.4]	; 1 means normal stability.
;string_values		= []
;phys_list		= [".*phys_body"]
;engine_list		= []
;mesh_list		= []


; -------------------- Materials. --------------------

[material:.*m_eye.]
shader			= "blend"
