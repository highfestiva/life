; Author: Jonas Byström
; Copyright (c) 2009 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 100
bounce			= 0.5
friction		= 0.3
affected_by_gravity	= True
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 90	# World-absolute euler angles.
material		= "silent"


; -------------------- Specific parts. --------------------

[body:.*phys_body]
mass			= 1000
connector_types		= ["connectee_3dof"]

[body:.*phys_tire_.*]
bounce			= 0.001
friction		= 0.8
joint			= "suspend_hinge"
joint_spring_constant	= 40
joint_spring_damping	= 0.8
impact_factor		= 0.1
material		= "rubber"

[body:.*phys_tire_f.]
joint			= "hinge2"
joint_stops		= [-30, 30]

[body:.*phys_tire_r.]
friction		= 1.2


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 1.5
max_velocity		= [40, -20]
friction		= 0.1	; Constant part of engine strength when input % applied. Engine brakes.
controller_index	= 0
connected_to		= [(".*phys_tire_r.", +1, "normal")]

[engine:turn]
type			= "hinge2_turn"
strength		= 1
max_velocity		= [2, 0]
friction		= 1	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_tire_f.", +1, "normal")]

[engine:brake]
type			= "hinge_brake"
strength		= 2
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal brakes (all, scaled >= 0) and handbrake (nodes with high scaling values).
connected_to		= [(".*phys_tire_f.", 0, "normal"), (".*phys_tire_r.", 100, "normal")]


; -------------------- Tags. --------------------

[tag:brake_lights]
type			= "brake_light"
float_values		= [1, 1, 1]
string_values		= []
phys_list		= []
engine_list		= ["engine:brake"]
mesh_list		= [".*m_rear_lights"]

[tag:engine_sound]
type			= "engine_sound"
float_values		= [1,   1,5,1,   .2,1,1,   0,0.5,1,	1]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["corvette.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:acc"]
mesh_list		= []

[tag:child_upright_stability]
type			= "upright_stabilizer"
float_values		= [0.4]	; 1 means normal stability.
string_values		= []
phys_list		= [".*phys_body"]
engine_list		= []
mesh_list		= []
