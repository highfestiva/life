; Author: Jonas Byström
; Copyright (c) 2009 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 80
bounce			= 0.8
friction		= 0.2
affected_by_gravity	= True
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 90	# World-absolute euler angles.
material		= "small_metal"


; -------------------- Specific parts. --------------------

[body:.*phys_.*_body]
mass			= 3000
connector_types		= ["connectee_3dof"]

[body:.*phys_wheel_.*]
bounce			= 0.2
friction		= 0.8
joint_spring_constant	= 50
joint_spring_damping	= 8
joint			= "suspend_hinge"
material		= "rubber"

[body:.*phys_front_body]
mass			= 2000
joint			= "hinge"
joint_stops		= [-35, 35]
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 0	# World-absolute euler angles.

[body:.*phys_front_arm]
mass			= 200
joint			= "hinge"
joint_stops		= [5, -90]

[body:.*phys_dipper]
mass			= 200
joint			= "hinge"
joint_stops		= [-5, 60]


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 2
max_velocity		= [10, -5]
controller_index	= 0
connected_to		= [(".*phys_wheel_..", +1, "normal")]

[engine:turn]
type			= "hinge_torque"
strength		= 3
max_velocity		= [0.5, 0]
friction		= 0.92	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_front_body", +1, "normal")]

[engine:brake]
type			= "hinge_brake"
strength		= 2.5
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal brakes (all, scaled >= 0) and handbrake (nodes with high scaling values).
connected_to		= [(".*phys_wheel_01", 0, "normal"), (".*phys_wheel_02", 0, "normal"), (".*phys_wheel_03", 100, "normal"), (".*phys_wheel_04", 100, "normal")]

[engine:hoe]
type			= "hinge_torque"
strength		= 20
max_velocity		= [2, 0.6]
friction		= 0	; Strength does not depend on speed.
controller_index	= 3
connected_to		= [(".*phys_front_arm", +0.5, "half_lock"), (".*phys_dipper", +0.3, "half_lock")]


; -------------------- Tags. --------------------

[tag:eye]
type			= "eye"
float_values		= [-0.35]
string_values		= []
phys_list		= [".*phys_front_body"]
engine_list		= []
mesh_list		= [".*m_eye."]

[tag:brake_lights]
type			= "brake_light"
float_values		= [0.5, 0, 0]
string_values		= []
phys_list		= []
engine_list		= ["engine:brake"]
mesh_list		= [".*m_brakelight."]

[tag:engine_sound]
type			= "engine_sound"
float_values		= [1,   0.4,1.2,1,   1,5,1,   0,0.5,1,	1,0.17,0.25]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["dumper_engine.wav"]
phys_list		= [".*phys_back_body"]
engine_list		= [".*engine:acc", ".*engine:turn", ".*engine:hoe"]
mesh_list		= []

[tag:exhaust_particle_generator]
type			= "exhaust"
float_values		= [0,-2.5,1.6,   -0.3,0,0.6,   1,0.3]	; Positional offset, velocity offset, density, opacity.
string_values		= []
phys_list		= []
engine_list		= [".*engine:acc"]
mesh_list		= [".*m_back_body"]

[tag:child_upright_stability]
type			= "upright_stabilizer"
float_values		= [1.5]	; 1 means normal stability.
string_values		= []
phys_list		= [".*phys_back_body"]
engine_list		= []
mesh_list		= []


; -------------------- Materials. --------------------

[material:.*m_eye.]
shader			= "blend"
