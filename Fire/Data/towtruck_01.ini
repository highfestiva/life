; Author: Jonas Byström
; Copyright (c) 2010 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 80
bounce			= 0.1
friction		= -0.15
affected_by_gravity	= True
joint_yaw		= 0	; World-absolute euler angles.
joint_pitch		= 90	; World-absolute euler angles.
material		= "small_metal"


; -------------------- Specific parts. --------------------

[body:.*phys_body]
mass			= 2500
connector_types		= ["connectee_3dof"]

[body:.*phys_cab]
mass			= 500
connector_types		= ["connectee_3dof"]

[body:.*phys_wheel._.]
mass			= 60
bounce			= 0.4
friction		= 1.6
joint			= "suspend_hinge"
joint_spring_constant	= 30
joint_spring_damping	= 1.5
impact_factor		= 0.1
material		= "rubber"

[body:.*phys_wheel._f]
mass			= 40
friction		= 1.2
joint			= "hinge2"
joint_stops		= [-35, 35]

[body:.*phys_arm2]
joint			= "hinge"
joint_stops		= [-10, 30]


; -------------------- Meshes. --------------------

[mesh:.*(?!.*\|)m_wheel._.]
shadow_deviation	= 0.5


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 4
max_velocity		= [25, -15]
friction		= 0.9	; Constant part of engine strength when input % applied. Engine brakes.
controller_index	= 0
connected_to		= [(".*phys_wheel._r", +1, "normal")]

[engine:turn]
type			= "hinge2_turn"
strength		= 1
max_velocity		= [2, 0]
friction		= 1	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_wheel._f", +1, "normal")]

[engine:brake]
type			= "hinge_brake"
strength		= 1
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal brakes (all, scaled >= 0) and handbrake (nodes with high scaling values).
connected_to		= [(".*phys_wheel._f", 0, "normal"), (".*phys_wheel._r", 100, "normal")]


; -------------------- Tags. --------------------

[tag:engine_sound]
type			= "engine_sound"
float_values		= [1,   1,2,1,   0.5,3,1,   0,0.5,1,	1]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["towtruck_01.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:acc"]
mesh_list		= []

[tag:hurt_particle_generator]
type			= "burn"
float_values		= [0,+10,-0.12,   0,12,8,   3,1,0.2,1.2]	; Positional offset, velocity offset, scale, density, opacity, TTL.
string_values		= []
phys_list		= []
engine_list		= []
mesh_list		= [".*m_body"]
