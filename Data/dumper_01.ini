; Author: Jonas Byström
; Copyright (c) 2009 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 150
bounce			= 0.6
friction		= 0.3
affected_by_gravity	= True
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 90	# World-absolute euler angles.
material		= "small_metal"


; -------------------- Specific parts. --------------------

[body:.*phys_body]
mass			= 2500
connector_types		= ["connectee_3dof"]

[body:.*phys_hud]
mass			= 500
connector_types		= ["connectee_3dof"]

[body:.*phys_wheel_.*]
bounce			= 0.2
friction		= 0.6
joint_spring_constant	= 50
joint_spring_damping	= 0.5
joint			= "suspend_hinge"
material		= "rubber"

[body:.*phys_bar]
mass			= 1500
joint			= "hinge"
joint_stops		= [35, -35]
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 0	# World-absolute euler angles.

[body:.*phys_container.*]
mass			= 100
connector_types		= ["connectee_3dof"]

[body:.*phys_container]
joint			= "hinge"
joint_stops		= [0, -80]


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 2
max_velocity		= [15, -7]
controller_index	= 0
connected_to		= [(".*phys_wheel_f.", +1, "normal"), (".*phys_wheel_r.", +0.9, "normal")]

[engine:turn]
type			= "hinge_torque"
strength		= 3
max_velocity		= [0.5, 0]
friction		= 0.9	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_bar", +1, "normal")]

[engine:break]
type			= "hinge_break"
strength		= 2.5
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal breaks (all, scaled >= 0) and handbreak (nodes with high scaling values).
connected_to		= [(".*phys_wheel_f.", 0, "normal"), (".*phys_wheel_r.", 100, "normal")]

[engine:tip]
type			= "hinge_torque"
strength		= 20
max_velocity		= [0.5, 0.2]
friction		= 0	; Don't let tipping angle depend on speed of vehicle.
controller_index	= 3
connected_to		= [(".*phys_container", +1, "normal")]


; -------------------- Tags. --------------------

[tag:engine_sound]
type			= "engine_sound"
float_values		= [1,   0.4,1.2,1,   1,5,1,   0,0.5,1,	1,0.11,0.16]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["dumper_engine.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:acc", ".*engine:turn", ".*engine:tip"]
mesh_list		= []

[tag:exhaust_particle_generator]
type			= "exhaust"
float_values		= [-0.7,0.8,2.5,   -0.6,.5,0.8,   1,0.3]	; Positional offset, velocity offset, density, opacity.
string_values		= []
phys_list		= []
engine_list		= [".*engine:acc"]
mesh_list		= [".*m_body"]

[tag:eye]
type			= "eye"
float_values		= [-0.2]
string_values		= []
phys_list		= [".*phys_bar"]
engine_list		= []
mesh_list		= [".*m_eye."]


; -------------------- Materials. --------------------

[material:.*m_eye.]
shader			= "blend"
