; Author: Jonas Byström
; Copyright (c) 2010 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 80
bounce			= 0.5
friction		= 0.5
affected_by_gravity	= True
joint_yaw		= 0	; World-absolute euler angles.
joint_pitch		= 90	; World-absolute euler angles.
material		= "small_metal"


; -------------------- Specific parts. --------------------

[body:.*phys_body]
mass			= 900
connector_types		= ["connectee_3dof"]
friction		= 0.2

[body:.*phys_wheel.*]
mass			= 30
bounce			= 0.7
friction		= 0.7
joint_spring_constant	= 100
joint_spring_damping	= 0.8
material		= "rubber"

[body:.*phys_wheel_f.*]
joint			= "suspend_hinge"

[body:.*phys_wheel_r.*]
joint			= "hinge2"
joint_stops		= [28, -28]

[body:.*phys_fork1]
joint			= "slider"
joint_stops		= [-1.8, 0.05]
joint_yaw		= 0	; World-absolute euler angles.
joint_pitch		= 0	; World-absolute euler angles.


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 0.8
max_velocity		= [20, -7]
friction		= 0.2
controller_index	= 0
connected_to		= [(".*phys_wheel_f.", +1, "normal")]

[engine:turn]
type			= "hinge2_turn"
strength		= 1.0
max_velocity		= [0.5, 0]
friction		= 0.87	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_wheel_r.", +1, "normal")]

[engine:break]
type			= "hinge_break"
strength		= 0.4
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal breaks (all, scaled >= 0) and handbreak (nodes with high scaling values).
connected_to		= [(".*phys_wheel_f.", 0, "normal"), (".*phys_wheel_r.", 100, "normal")]

[engine:lift]
type			= "slider_force"
strength		= 50
max_velocity		= [1.0, 2.0]
controller_index	= 3
connected_to		= [(".*phys_fork1", -1, "half_lock")]


; -------------------- Tags. --------------------

[tag:engine_sound]
type			= "engine_sound"
float_values		= [0,   0,0.8,0.4,   1,4,0.8,   1,1,1,   2]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["forklift_01.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:acc"]
mesh_list		= []

[tag:engine_lift]
type			= "engine_sound"
float_values		= [0,   0,0.65,1,   0.3,3,0.8,   1,1,1,    1]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["forklift_01_lift.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:lift"]
mesh_list		= []

[tag:eye0]
type			= "eye"
float_values		= [-0.3]
string_values		= []
phys_list		= [".*phys_wheel_r3"]
engine_list		= []
mesh_list		= [".*m_eye0"]

[tag:eye1]
type			= "eye"
float_values		= [-0.3]
string_values		= []
phys_list		= [".*phys_wheel_r4"]
engine_list		= []
mesh_list		= [".*m_eye1"]

[tag:child_upright_stability]
type			= "upright_stabilizer"
float_values		= [1]	; 1 means normal stability.
string_values		= []
phys_list		= [".*phys_body"]
engine_list		= []
mesh_list		= []


; -------------------- Materials. --------------------

[material:.*m_eye.]
shader			= "blend"
