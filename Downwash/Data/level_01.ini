; Author: Jonas Byström
; Copyright (c) 2009 Righteous Games

[config:general]
type = "world"

[body:.*\|phys_.*]
affected_by_gravity	= False
mass			= 1
bounce			= 0.4
friction		= 1.0
material		= "concrete"

[body:.*phys_terrain.*]
friction		= 0.7

[body:.*phys_door.*]
mass			= 2000
bounce			= 0.05
friction		= 0.1
material		= "big_metal"
joint			= "slider"
joint_yaw		= 0	# World-absolute euler angles.
joint_pitch		= 0	# World-absolute euler angles.
[body:.*phys_door1]
joint_stops		= [-8, -0.01]
[body:.*phys_door2]
joint_stops		= [+0.01, +8]

[body:.*phys_hook.*]
affected_by_gravity	= True
mass			= 700
bounce			= 0.9
friction		= 0.1
[body:.*phys_hook]
joint			= "hinge"
joint_yaw		= 90	# World-absolute euler angles.
joint_pitch		= 90	# World-absolute euler angles.
joint_stops		= [-57, +3]
[body:.*phys_hook_fastning]
mass			= 400
[body:.*phys_hook_line]
mass			= 300
bounce			= 0.4


; -------------------- Engines. --------------------

[engine:door]
type			= "slider_force"
strength		= 4
max_velocity		= [6.0, 6.0]
controller_index	= 3
connected_to		= [(".*phys_door1", +1, "half_lock"), (".*phys_door2", -1, "half_lock")]


; -------------------- Tags. --------------------

[tag:landing_smooth_pad]
type			= "anything"
float_values		= []
string_values		= []
phys_list		= [".*phys_startingpad", ".*phys_landingpad"]
engine_list		= []
mesh_list		= []

[tag:landing_finish_trigger]
type			= "stunt_trigger_data"
float_values		= [0,0.1,0.1, 1,3]	; Min & max speed through trigger, min time inside trigger, real time ratio, duration.
string_values		= ["", ""]
phys_list		= [".*phys_trig_landing"]
engine_list		= []
mesh_list		= []

[tag:chopper_path]
type			= "context_path"
float_values		= [1]			; 1 = Normal chance.
string_values		= ["player_path"]
phys_list		= [".*phys_pos_player_path1_start", ".*phys_pos_player_path1_+\d*", ".*phys_pos_player_path1_land"]
engine_list		= []
mesh_list		= []

[tag:door_sound]
type			= "engine_sound"
float_values		= [0,   0.5,4,1,   0,10,0.5,   0,0.5,1,	1]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["elevator.wav"]
phys_list		= [".*phys_door1"]
engine_list		= [".*engine:door"]
mesh_list		= []

[tag:gravel]
type			= "mass_objects"
float_values		= [200, 50]
string_values		= ["pebble", "gold_nugget"]
phys_list		= [".*phys_terrain", ".*phys_terrain"]
engine_list		= []
mesh_list		= []


; -------------------- Triggers. --------------------

[trigger:stunt_time]
type			= "movement"
function		= "real_time_ratio"
priority		= 1
triggered_by		= [".*phys_trig_landing"]
connected_to		= []

[trigger:door]
type			= "non_stop"
function		= "trig_elevator"
priority		= 1
triggered_by		= []
connected_to		= [(".*engine:door", 6.5, "toggle")]	; Engine, delay, function.


; -------------------- Spawn engines. --------------------

[spawner:spawn_player]
type			= "creator"
function		= "spawner"
connected_to		= [".*phys_pos_start"]
number			= 0
intervals		= [0, 0]
spawn_objects		= [("", 1)]	; (Object, probability), ...
pos_scale		= 0

[spawner:spawn_coffin1]
type			= "creator"
function		= "spawner"
connected_to		= [".*phys_pos_coffin1"]
number			= 1
intervals		= [5, 0]
spawn_objects		= [("coffin", 1)]	; (Object, probability), ...
ease_down		= True

[spawner:spawn_coffin2]
type			= "creator"
function		= "spawner"
connected_to		= [".*phys_pos_coffin2"]
number			= 1
intervals		= [5, 0]
spawn_objects		= [("coffin", 1)]	; (Object, probability), ...
ease_down		= True


; -------------------- Materials. --------------------

[material:.*m_hook]
nosplit			= True

[material:.*m_door(.|_stop.*|_frame.*)]
casts_shadows		= False
