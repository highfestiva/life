; Author: Jonas Byström
; Copyright (c) 2010 Righteous Games

[config:general]
type = "dynamic"

[body:.*phys_.*]
mass			= 80
bounce			= 0.5
friction		= 0.2
affected_by_gravity	= True
joint_yaw		= 0	; World-absolute euler angles.
joint_pitch		= 90	; World-absolute euler angles.
material		= "small_metal"


; -------------------- Specific parts. --------------------

[body:.*phys_body]
mass			= 12000
friction		= 0.4
connector_types		= ["connectee_3dof"]

[body:.*phys_wheel.*]
joint_spring_constant	= 50
joint_spring_damping	= 5.5
material		= "rubber"

[body:.*phys_wheel1.*]
joint			= "hinge2"
joint_stops		= [-25, 25]

[body:.*phys_wheel2.*]
joint			= "hinge2"
joint_stops		= [-19, 19]

[body:.*phys_wheel3.*]
joint			= "hinge2"
joint_stops		= [-10, 10]

[body:.*phys_wheel4.*]
joint			= "suspend_hinge"

[body:.*phys_crane1]
mass			= 400
joint			= "hinge"
joint_stops		= [0, -80]

[body:.*phys_crane2]
mass			= 200
joint			= "slider"
joint_stops		= [-6, 0]	; In this type of joint: slider distances. 
joint_yaw		= 90		; World-absolute euler angles.
joint_pitch		= 89		; World-absolute euler angles.


; -------------------- Engines. --------------------

[engine:acc]
type			= "hinge_roll"
strength		= 0.5
max_velocity		= [40, -20]
controller_index	= 0
connected_to		= [(".*phys_wheel._.", +1, "normal")]

[engine:turn]
type			= "hinge2_turn"
strength		= 1
max_velocity		= [0.5, 0]
friction		= 0.95	; In this type of engine: lets turning depend on speed, so it's harder to flip over due to hard turns.
controller_index	= 1
connected_to		= [(".*phys_wheel1_.", +1, "normal"), (".*phys_wheel2_.", +1.316, "normal"), (".*phys_wheel3_.", +2.5, "normal")]

[engine:break]
type			= "hinge_break"
strength		= 0.7
input_threashold	= 0.02		; Note: variable only declared for clarity.
max_velocity		= [%(input_threashold)s, 0]
controller_index	= 2
; Normal breaks (all, scaled >= 0) and handbreak (nodes with high scaling values).
connected_to		= [(".*phys_wheel[1-3]_.", 0, "normal"), (".*phys_wheel4_.", 100, "normal")]

[engine:arm]
type			= "hinge_torque"
strength		= 5
max_velocity		= [0.5, 0.05]
friction		= 0	; Strength does not depend on speed.
controller_index	= 3
connected_to		= [(".*phys_crane1", +1, "half_lock")]

[engine:arm2]
type			= "slider_force"
strength		= 5
max_velocity		= [2.0, 5.0]
friction		= 0	; Strength does not depend on speed.
controller_index	= 3
connected_to		= [(".*phys_crane2", -1, "normal")]

; -------------------- Tags. --------------------

[tag:engine_sound]
type			= "engine_sound"
float_values		= [1,   1,2,1,   0.5,3,1,   0,0.5,1,	1,0.11,0.16]	; Throttle factor. Low, high, exponent for: pitch, volume, intensity. One intensity factor for each engine.
string_values		= ["truck_01.wav"]
phys_list		= [".*phys_body"]
engine_list		= [".*engine:acc", ".*engine:arm", ".*engine:arm2"]
mesh_list		= []

[tag:eye]
type			= "eye"
float_values		= [-0.35]
string_values		= []
phys_list		= []
engine_list		= ["engine:turn"]
mesh_list		= [".*m_eyes"]

[tag:brake_lights]
type			= "brake_light"
float_values		= [1, 1, 1]
string_values		= []
phys_list		= []
engine_list		= ["engine:break"]
mesh_list		= [".*m_breaklights"]

[tag:exhaust_particle_generator]
type			= "exhaust"
float_values		= [1,2.75,2.25,   0,-0.2,0.8,   0.8,0.2]	; Positional offset, velocity offset, density, opacity.
string_values		= []
phys_list		= []
engine_list		= [".*engine:acc"]
mesh_list		= [".*m_exhaust"]

[tag:child_upright_stability]
type			= "upright_stabilizer"
float_values		= [0.8]	; 1 means normal stability.
string_values		= []
phys_list		= [".*phys_body"]
engine_list		= []
mesh_list		= []


; -------------------- Materials. --------------------

[material:.*m_eyes]
shader			= "blend"
